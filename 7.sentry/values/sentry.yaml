# Usuário inicial do Sentry
user:
  create: true
  email: admin@sentry.local
  password: "admin123"          # troque depois
  isSuperuser: true


# Banco e Redis "embutidos" (bons para laboratório local)
postgresql:
  enabled: true
  auth:
    username: sentry
    password: sentry
    database: sentry

redis:
  enabled: true


# Ingress
ingress:
  enabled: true
  ingressClassName: nginx
  hosts:
    - host: sentry.127.0.0.1.nip.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: https-certs
      hosts:
        - sentry.127.0.0.1.nip.io


# Para ambiente local, reduzir réplicas ajuda a subir rápido
sentry:
  web:
    replicaCount: 1
  worker:
    replicaCount: 1
  cron:
    replicaCount: 1

# Sentry settings
config:
  sentryConfPy: |
    # Liga profiling no backend
    SENTRY_USE_PROFILING = True

    # Garante que a UI habilite os painéis de performance/profiling
    SENTRY_FEATURES.update({
        "organizations:performance-view": True,
        "organizations:profiling": True,
        "organizations:profiling-view": True,
        "organizations:metrics": True,
        "organizations:performance-issues": True,
        "organizations:monitors": True,
    })
  configYml:
    system.url-prefix: "http://sentry.127.0.0.1.nip.io"
    maxRequestBodySize: 2000000
    maxResponseBodySize: 2000000
  snubaSettingsPy: |
    # No Python Extension Config Given
  relay: |
    # No YAML relay config given
  web:
    httpKeepalive: 15
    httpChunkedInput: true
    workers: 3
    memoryReport: false
    maxRequests: 100000
    maxRequestsDelta: 500
    maxWorkerLifetime: 86400
    thunderLock: true
    logXForwardedFor: false
    bufferSize: 32768
    limitPost: 209715200
    disableLogging: true
    reloadOnRss: 600
    ignoreSignpipe: true
    ignoreWriteErrors: true
    disableWriteException: true


